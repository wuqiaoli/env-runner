{"version":3,"file":"extension.js","mappings":"05BAAA,kBAEMA,EAAeC,EAAOC,UAAUC,iBAAiB,aAAaC,SAEpE,IAAIC,EAAmC,KAG1B,EAAAC,SAAYC,IACvB,MAAMC,EAAW,IAAIC,EACrBR,EAAOS,OAAOC,yBAAyB,wBAAyBH,GAEhER,EAAaY,SAASC,IACpBN,EAAQO,cAAcC,KACpBd,EAAOG,SAASY,gBAAgBH,EAAEI,IAAI,IAU5CC,eAA0BC,GACnBd,QAAoCe,IAAxBf,EAASgB,aACxBhB,EAAWJ,EAAOS,OAAOY,eAAe,SAE1CjB,EAASkB,OAETlB,EAASmB,SAAS,WACZ,IAAIC,SAASC,GAAYC,WAAWD,EAAS,OAEnDrB,EAASmB,SAASL,EACpB,CApBkDS,CAAWf,EAAEM,WAC1D,IAEHlB,EAAOS,OAAOmB,oBAAoBC,IAC5BA,IAAmBzB,IACrBA,EAAW,KACb,GACA,EAeJ,MAAMI,EACJ,WAAAsB,CAAYC,GACV,OAAOA,CACT,CACA,WAAAC,GACE,OAAOjC,EAAakC,KAAKrB,IACvB,MAAMsB,EAAO,IAAIlC,EAAOmC,SACtBvB,EAAEwB,MACFpC,EAAOqC,yBAAyBC,MAMlC,OAJAJ,EAAKhB,QAAU,CACbA,QAASN,EAAEI,GACXuB,MAAO3B,EAAEwB,OAEJF,CAAI,GAEf,EAGW,EAAAM,WAAa,KACpBpC,IACFA,EAASqC,UACTrC,EAAW,KACb,C,UC1DFsC,EAAOC,QAAUC,QAAQ,S,GCCrBC,EAA2B,CAAC,ECE5BC,EDCJ,SAASC,EAAoBC,GAE5B,IAAIC,EAAeJ,EAAyBG,GAC5C,QAAqB7B,IAAjB8B,EACH,OAAOA,EAAaN,QAGrB,IAAID,EAASG,EAAyBG,GAAY,CAGjDL,QAAS,CAAC,GAOX,OAHAO,EAAoBF,GAAUG,KAAKT,EAAOC,QAASD,EAAQA,EAAOC,QAASI,GAGpEL,EAAOC,OACf,CCnB0BI,CAAoB,K","sources":["webpack://env-runner/./src/extension.ts","webpack://env-runner/external commonjs \"vscode\"","webpack://env-runner/webpack/bootstrap","webpack://env-runner/webpack/startup"],"sourcesContent":["import * as vscode from \"vscode\";\n\nconst environments = vscode.workspace.getConfiguration(\"envRunner\").commands;\n\nlet terminal: vscode.Terminal | null = null;\n\n// 激活插件\nexport const activate = (context: vscode.ExtensionContext) => {\n  const provider = new EnvironmentProvider();\n  vscode.window.registerTreeDataProvider(\"customEnvironmentView\", provider);\n\n  environments.forEach((i: { id: string; command: string }) => {\n    context.subscriptions.push(\n      vscode.commands.registerCommand(i.id, () => runCommand(i.command))\n    );\n  });\n  vscode.window.onDidCloseTerminal((closedTerminal) => {\n    if (closedTerminal === terminal) {\n      terminal = null;\n    }\n  });\n};\n// 运行命令\nasync function runCommand(command: string) {\n  if (!terminal || terminal.exitStatus !== undefined) {\n    terminal = vscode.window.createTerminal(\"项目启动\");\n  }\n  terminal.show();\n\n  terminal.sendText(\"\\x03\"); // Ctrl + C\n  await new Promise((resolve) => setTimeout(resolve, 300));\n\n  terminal.sendText(command);\n}\n\nclass EnvironmentProvider implements vscode.TreeDataProvider<vscode.TreeItem> {\n  getTreeItem(element: vscode.TreeItem): vscode.TreeItem {\n    return element;\n  }\n  getChildren(): vscode.TreeItem[] {\n    return environments.map((i: { label: string; id: string }) => {\n      const item = new vscode.TreeItem(\n        i.label,\n        vscode.TreeItemCollapsibleState.None\n      );\n      item.command = {\n        command: i.id,\n        title: i.label,\n      };\n      return item;\n    });\n  }\n}\n\nexport const deactivate = () => {\n  if (terminal) {\n    terminal.dispose();\n    terminal = null;\n  }\n};\n","module.exports = require(\"vscode\");","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(265);\n"],"names":["environments","vscode","workspace","getConfiguration","commands","terminal","activate","context","provider","EnvironmentProvider","window","registerTreeDataProvider","forEach","i","subscriptions","push","registerCommand","id","async","command","undefined","exitStatus","createTerminal","show","sendText","Promise","resolve","setTimeout","runCommand","onDidCloseTerminal","closedTerminal","getTreeItem","element","getChildren","map","item","TreeItem","label","TreeItemCollapsibleState","None","title","deactivate","dispose","module","exports","require","__webpack_module_cache__","__webpack_exports__","__webpack_require__","moduleId","cachedModule","__webpack_modules__","call"],"sourceRoot":""}